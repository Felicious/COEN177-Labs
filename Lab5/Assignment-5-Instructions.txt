Final Lab

Unlike previous labs, your final lab assignment is a mini-project of your own choosing. Your final deliverable is a short project report describing your work and its outcomes, but the topic of your project is not pre-determined. However, there are only two specific requirements regarding what constitutes an acceptable final project, and they are as follows:
-The project topic must address an issue within the domain of an operating system, and more specifically, cover a topic of discussion for this course. For example this means that you may tackle projects on any of the following: processes and process management, scheduling, deadlock detection or avoidance, memory and I/O management (e.g., caching, page replacement, or allocation algorithms). Another acceptable area would be to focus on RAID or similar reliability schemes.
-The report must include a description of a question and an attempt to answer that question. Typically this could involve constructing an experiment to measure the performance of an operating systems’ algorithm that you have implemented on a limited scale. For example, your recent lab assignment on page replacement algorithms involved constructing a simulation of a handful of page replacement algorithms and testing their performance.

Possible projects could involve extending that assignment to new algorithms and workloads (i.e., testing more advanced page replacement algorithms and/or testing against a wider range of workloads). The question posed by that assignment is “how well to these particular algorithms perform?” and the manner in which it chose to answer that question was to test them against a sequence of numbers representing page requests. A good final report should describe the problem and area of your project, describe the question you wish to answer, and provide a description of your experiment. To use another example, if your focus were to be on deadlock avoidance, then a good report could describe the general issue of deadlock, and then go on to describe a question like “how slow is deadlock avoidance for N resources?” and then go on to describe an experiment that implemented and timed a simple deadlock avoidance algorithm for a large range of values of N. Such an experiment could focus on comparing the timing of such an O(N^2) against a cycle-detection algorithm being run against randomly generated directed graphs of N nodes (to simulate the timing costs of a deadlock detection algorithm). Such experiments need not be complex, but they do need to demonstrate an ability to describe an OS-related problem and answer a question about it. Again, the problem and question can be of your own choosing. You may extend a previous lab, or focus on a new problem.

The final report for this project is the only graded deliverable, and will be due June 15th (after our final). However, we do ask that you provide a short paragraph or two describing your planned project topic and general strategy by next Wednesday (May 31st). Two separate Camino assignment pages will be available for those uploads, and submission of both assignments is required, though this one (the first) is not going to be graded. This page is intended for the proposal, and it is being requested to allow us to offer feedback and suggestions of possible resources where appropriate. While this is ungraded, the more thought you place into your proposal description, the easier the remaining project work should hopefully be.
Good Luck!
